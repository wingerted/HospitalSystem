///////////////////////////////////////////////////////////
//  Collector.cs
//  Implementation of the Class Collector
//  Generated by Enterprise Architect
//  Created on:      24-6月-2013 23:03:16
//  Original author: Winger
///////////////////////////////////////////////////////////

using System;
using HospitalSystem.Models;
using System.Data;
using System.Linq;

namespace HospitalSystem.Business
{
    public class Collector {
        teamworkContext db = new teamworkContext();
        public patient Patient { get; set; }

        public RegisterInformation registerInformation;
        public static NurseStation NurseStation = new NurseStation();
        /// <summary>
        /// 输入病人Id、[看病选项（1代表仅挂号，2代表挂号加新建病案，3代表结账收费）已经分开来了，故不需要option选项]，调用数据库， 得到药品价格，计算并填写付费信息类，
        /// </summary>
        /// <param name="patientId"></param>
        /// <param name="option"></param>
        /// 返回看病信息类在页面显示
        public ViewCharge Charge(long patientId, long stuffId)
        {
            ViewCharge viewCharge = new ViewCharge();
            double tempTotalPay = 0;
            if (db.medical_record.Where(m => m.PatientID == patientId).ToList().Count == 0)
                return viewCharge;
            medical_record medicalRecordModel = db.medical_record.Where(m => m.PatientID == patientId).OrderByDescending(m => m.TreatTime).First();
            

            if (db.examine_list.Where(m => m.MedicalRecordID == medicalRecordModel.MedicalRecordID).ToList().Count != 0)
            {

                var examineList = (from xx in db.examine_product
                                   join id in medicalRecordModel
                                       .examine_list.First()
                                       .examine_detail
                                       .Select(m => m.ProductID)
                                   on xx.ProductID equals id.Value
                                   select new ViewExamine
                                   {
                                       ExamineID = xx.ProductID,
                                       ExamineName = xx.ProductName,
                                       ExaminePrice = xx.ProductPrice
                                   }).ToList();
                viewCharge.Examinelist = examineList;
                tempTotalPay += (double)examineList.Sum(m => m.ExaminePrice);
            }
            if (db.prescriptions.Where(m => m.MedicalRecordID == medicalRecordModel.MedicalRecordID).ToList().Count != 0)
            {
                var medicineList = (from id in medicalRecordModel
                                        .prescriptions.First()
                                        .medicine_detail.ToList()
                                    join xx in db.medicines
                                    on id.MedicineID equals xx.MedicineID
                                    select new ViewMedicine
                                    {
                                        MedicineID = xx.MedicineID,
                                        MedicineName = xx.MedicineName,
                                        MedicinePrice = xx.MedicinePrice,
                                        MedicineCount = id.MedicineNumber
                                    }).ToList();
                viewCharge.Medicinelist = medicineList;
                tempTotalPay += (double)medicineList.Sum(m => m.MedicinePrice * m.MedicineCount);
            }
            viewCharge.PatientID = patientId;

            viewCharge.PatientName = db.patients.Find(patientId).Name;

            viewCharge.totalPay = tempTotalPay;
            return viewCharge;
        }

        /// <summary>
        /// 调用RegisterQueue中的AddTotalQueueNumber,GetTotalQueueNumber, 得到当前就诊号
        /// </summary>
        /// <param name="patientId"></param>
        /// <param name="department"></param>
        public long GenerateQueueNumber(long departmentNumber)
        {
            
            NurseStation.AddTotalQueueNumber(departmentNumber);
            return NurseStation.GetTotalQueueNumber(departmentNumber);
        }

        /// <summary>
        /// 读取病人Id号,
        /// 检索数据库，填写挂号信息类中的姓名，病人Id，科室
        /// 
        /// 调用GenerateQueueNumber方法，得到就诊号，填入挂号信息类中
        /// 
        /// 调用Charge方法（1代表仅挂号，2代表挂号加新建病案，3代表结账收费），得到付费信息，填入挂号信息类中
        /// </summary>
        /// <param name="patientId"></param>
        /// <param name="department"></param>
        /// 这里做了改动加入staffID要入数据库
        public RegisterInformation RegisterHospital(long patientId, long departmentId, long stuffId)
        {
            registerInformation = new RegisterInformation();
            registerInformation.PatientId = patientId;
          
            patient patient = db.patients.Find(patientId);
            registerInformation.PatientName = patient.Name;
            
            department department = db.departments.Find(departmentId);
            registerInformation.DepartmentName = department.DepartmentName;
            
            registerInformation.QueueNumber = GenerateQueueNumber(departmentId);
            
            registerInformation.RegisterMoney = 8.00;
            
            /////////将这人添加到registelist当中去存入数据库
            register_list registerList = new register_list();
            registerList.PatientID = patientId;
            registerList.DepartmentID = departmentId;
            registerList.RegisterTime = System.DateTime.Now;
            registerList.StaffID = stuffId;
            db.register_list.Add(registerList);
            
            db.SaveChanges();
            
            return registerInformation;
        }

        /// <summary>
        /// 输入姓名、出生年月、 性别、 联系方式，存入数据库
        /// 
        /// 得到病人ID，姓名，科室填入挂号信息类中
        /// 
        /// 调用GenerateQueueNumber方法，得到就诊号，填入挂号信息类中
        /// 
        /// 调用Charge方法（1代表仅挂号，2代表挂号加新建病案，3代表结账收费），得到付费信息，填入挂号信息类中
        /// </summary>
        /// <param name="patientName"></param>
        /// <param name="birthDate"></param>
        /// <param name="gender"></param>
        /// <param name="tel"></param>
        /// <param name="department"></param>
        public long RegisterHospital(patient patientModel)
        {
            //将patientid, patientName ，birthDate，gender，telephone 存入数据库

            //department department = db.departments.Find(departmentId);
            //registerInformation = new RegisterInformation();
            //registerInformation.DepartmentName = department.DepartmentName;
            //registerInformation.PatientId = patientModel.PatientID;
            //registerInformation.PatientName = patientModel.Name;
            //registerInformation.QueueNumber = GenerateQueueNumber(departmentId);
            //registerInformation.RegisterMoney = 9.50;

            ///////////将这人添加到registelist当中去存入数据库
            //register_list registerList = new register_list();
            //registerList.PatientID = registerInformation.PatientId;
            //registerList.DepartmentID = departmentId;
            //registerList.RegisterTime = DateTime.Now;
            //registerList.StaffID = stuffId;

            //db.register_list.Add(registerList);
            db.patients.Add(patientModel);
            db.SaveChanges();

            return patientModel.PatientID;
        }


        public void SaveChargeRecord(long patientId, long stuffId, double sumPay)
        {
            charge_record chargeRecord = new charge_record();

            medical_record medicalRecord = db.medical_record.Where(m => m.PatientID == patientId).OrderByDescending(m => m.TreatTime).First();

      
            //chargeRecord.ExamineListID = medicalRecord.examine_list.First().ExamineListID;
            if (medicalRecord.examine_list.Count != 0)
            {
                chargeRecord.examine_list = medicalRecord.examine_list.First();
            }
            
            
                 
            //chargeRecord.PrescriptionID = medicalRecord.prescriptions.First().PrescriptionID;
            if (medicalRecord.prescriptions.Count != 0)
            {
                chargeRecord.prescription = medicalRecord.prescriptions.First();
            }
            


            chargeRecord.PatientID = patientId;
            chargeRecord.StaffID = stuffId;
            chargeRecord.SumPay = sumPay;
            chargeRecord.ChargeDate = DateTime.Now;
            
            db.charge_record.Add(chargeRecord);
            db.SaveChanges();
        }



    }
}//end Collector