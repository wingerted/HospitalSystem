///////////////////////////////////////////////////////////
//  NurseStation.cs
//  Implementation of the Class NurseStation
//  Generated by Enterprise Architect
//  Created on:      24-6月-2013 23:03:16
//  Original author: Winger
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Routing;
using System.Web.Security;
using HospitalSystem.Models;
namespace HospitalSystem.Business
{
    public class NurseStation
    {
        public NurseStation()
        {
            teamworkContext db = new teamworkContext();
            List<department> departmentlist = db.departments.ToList();
            int amount = departmentlist.Count();
            RegisterQueueArray = new RegisterQueue[departmentlist.Count()];
            for (int i = 0; i < departmentlist.Count(); i++)
            {
                if (departmentlist[i].DepartmentType != "检验科室")
                    RegisterQueueArray[i] = new RegisterQueue(departmentlist[i].DepartmentID, departmentlist[i].DepartmentName);
                else
                    amount--;
            }
            DepartmentAmount = amount;
        }

        public static int DepartmentAmount { get; set; }

        public static RegisterQueue[] RegisterQueueArray;
        
        //根据科室Id获取排队队列的数组下标
        public int SearchRegisterQueueIndex(long departmentId)
        {
            for (int i = 0; i < DepartmentAmount; i++)
                if (RegisterQueueArray[i].DepartmentId == departmentId)
                    return i;
            return 0;
        }

        /// <summary>
        /// 根据不同的科室，对不同的CurrentNumber + 10
        /// </summary>
        /// <param name="department"></param>
        public  void CallPatient(long departmentId)
        {
            int registerQueueIndex = SearchRegisterQueueIndex(departmentId);
            if (RegisterQueueArray[registerQueueIndex].CurrentNumber + 10 > RegisterQueueArray[registerQueueIndex].TotalNumber)
                RegisterQueueArray[registerQueueIndex].CurrentNumber = RegisterQueueArray[registerQueueIndex].TotalNumber;
            else
                RegisterQueueArray[registerQueueIndex].CurrentNumber += 10;
        }

        /// <summary>
        /// 根据不同的科室，撤销叫号 CurrentNumber - 10
        /// </summary>
        /// <param name="department"></param>
        public void CancelCallPatient(long departmentId)
        {
            int registerQueueIndex = SearchRegisterQueueIndex(departmentId);
            if (RegisterQueueArray[registerQueueIndex].CurrentNumber < 10)
                RegisterQueueArray[registerQueueIndex].CurrentNumber = 0;
            else
                RegisterQueueArray[registerQueueIndex].CurrentNumber -= 10;
        }

        /// <summary>
        /// 根据输入的科室名，TotalQueueNumber加1
        /// 科室下标从1开始
        /// </summary>
        /// <param name="department"></param>
        public void AddTotalQueueNumber(long departmentId)
        {
            int registerQueueIndex = SearchRegisterQueueIndex(departmentId);
            RegisterQueueArray[registerQueueIndex].TotalNumber += 1;
        }

        /// <summary>
        /// 根据输入的科室名，TotalQueueNumber
        /// 科室下标从1开始
        /// </summary>
        /// <param name="department"></param>
        public int GetTotalQueueNumber(long departmentId)
        {
            int registerQueueIndex = SearchRegisterQueueIndex(departmentId);
            return RegisterQueueArray[registerQueueIndex].TotalNumber;
        }

        /// <summary>
        /// 根据输入的科室名，得到CurrentNumber
        /// 科室下标从1开始
        /// </summary>
        /// <param name="department"></param>
        public int GetCurrentQueueNumber(long departmentId)
        {
            int registerQueueIndex = SearchRegisterQueueIndex(departmentId);
            return RegisterQueueArray[registerQueueIndex].CurrentNumber;//RegisterQueueArray数组下标从0开始 所以-1
        }

    }
}//end NurseStation